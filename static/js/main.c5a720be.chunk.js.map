{"version":3,"sources":["data/mock.js","data/db/locationData.js","data/index.js","utils/Api.js","utils/Helpers.js","app/components/UI/Loader.js","app/components/Location/LocationContainer.js","app/components/Location/LocationChart.js","app/components/Location/LocationTable.js","app/App.js","serviceWorker.js","index.js"],"names":["mock","MockAdapter","axios","delayResponse","locations","id","name","y","x","size","onGet","reply","config","onAny","passThrough","Api","getLocations","get","renameProp","oldProp","newProp","old","others","Loader","props","isLoading","className","data-testid","color","loading","LocationContainer","useState","error","selectedTab","state","setState","useEffect","then","response","data","catch","e","message","toast","autoClose","filterUniqueLocations","key","_","uniqBy","showContent","AppBar","position","Tabs","value","onChange","event","centered","Tab","label","LocationChart","newValue","hoverValue","Paper","onValueMouseOver","onValueMouseOut","keyName","LocationTable","columns","options","responsive","configure","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5a720be.chunk.js","sourcesContent":["import axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\n\n/**\n * Instantiates a new MockAdapter instance\n * @type {MockAdapter}\n */\nconst mock = new MockAdapter(axios, { delayResponse: 750 });\nexport default mock;\n","import mock from \"../mock\";\n\nconst locations = [\n  {\n    id: 1,\n    name: \"a\",\n    y: 36.80638477380125,\n    x: 39.4449153947703,\n    size: 5.8\n  },\n\n  {\n    id: 2,\n    name: \"c\",\n    y: 92.72378114627274,\n    x: 85.19150475473184,\n    size: 8.0\n  },\n\n  {\n    id: 3,\n    name: \"b\",\n    y: 6.307027617647912,\n    x: 65.97939639324936,\n    size: 9.0\n  },\n\n  {\n    id: 4,\n    name: \"a\",\n    y: 37.45016534487874,\n    x: 38.49627026221381,\n    size: 1.0\n  },\n\n  {\n    id: 5,\n    name: \"d\",\n    y: 15.81937888166879,\n    x: 30.107143522811732,\n    size: 3.4\n  },\n\n  {\n    id: 6,\n    name: \"b\",\n    y: 4.697501854713504,\n    x: 65.12057699689227,\n    size: 3.3\n  },\n\n  {\n    id: 7,\n    name: \"f\",\n    y: 49.72539249123659,\n    x: 67.9858657771189,\n    size: 3.7\n  },\n\n  {\n    id: 8,\n    name: \"f\",\n    y: 49.31328972292483,\n    x: 68.09402623068067,\n    size: 1.1\n  },\n\n  {\n    id: 9,\n    name: \"e\",\n    y: 38.18290046154109,\n    x: 81.71360463623895,\n    size: 2.1\n  },\n\n  {\n    id: 10,\n    name: \"f\",\n    y: 49.79353997764336,\n    x: 68.01373401680416,\n    size: 1.4\n  },\n\n  {\n    id: 11,\n    name: \"d\",\n    y: 15.556831287795688,\n    x: 30.77308955210717,\n    size: 3.4\n  },\n\n  {\n    id: 12,\n    name: \"d\",\n    y: 15.887178087020478,\n    x: 30.756777903530697,\n    size: 4.6\n  },\n\n  {\n    id: 13,\n    name: \"g\",\n    y: 4.759693693983893,\n    x: 48.78450141787685,\n    size: 5.4\n  },\n\n  {\n    id: 14,\n    name: \"c\",\n    y: 91.20786702227447,\n    x: 86.86112435683953,\n    size: 7.1\n  },\n\n  {\n    id: 15,\n    name: \"d\",\n    y: 16.706632368872377,\n    x: 30.57634811456861,\n    size: 2.0\n  }\n];\n\nmock.onGet(\"/api/locations\").reply(config => {\n  return [200, locations];\n});\n","import mock from \"./mock\";\nimport \"./db/locationData\";\n\n//mock requests on any requested routes\nmock.onAny().passThrough();\n","import axios from \"axios\";\n\n/**\n * API repository\n * @type {{getLocations: (function(): AxiosResponse<T>)}}\n */\nconst Api = {\n  /**\n   * Gets all location data\n   * @return {Promise<AxiosResponse<T>>}\n   */\n  getLocations: () => axios.get(\"api/locations\")\n};\n\nexport default Api;\n","/**\n * Immutably renames object keys\n * @param oldProp\n * @param newProp\n * @param old\n * @param others\n * https://medium.com/@yazeedb/immutably-rename-object-keys-in-javascript-5f6353c7b6dd\n */\nexport const renameProp = (oldProp, newProp, { [oldProp]: old, ...others }) => {\n  debugger;\n  return {\n    [newProp]: old,\n    ...others\n  };\n};\n","import React from \"react\";\nimport { BeatLoader } from \"react-spinners\";\n\nconst Loader = props => {\n  const { isLoading } = props;\n  return (\n    <div className=\"container flex flex-col flex-grow mx-auto px-8 sm:px-16 py-24\">\n      <div\n        className=\"flex justify-center align-middle my-128 loader-container\"\n        data-testid=\"loader-container\"\n      >\n        <BeatLoader color={\"#123abc\"} loading={isLoading} />\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport { Api } from \"../../../utils\";\nimport _ from \"lodash\";\nimport { AppBar } from \"@material-ui/core\";\nimport { Tab, Tabs } from \"@material-ui/core\";\nimport { LocationChart, LocationTable } from \"../Location\";\nimport { Loader } from \"../UI\";\nimport { toast } from \"react-toastify\";\n\nconst LocationContainer = () => {\n  const [state, setState] = useState({\n    isLoading: false,\n    locations: null,\n    error: null,\n    selectedTab: 0\n  });\n\n  const { isLoading, locations, selectedTab } = state;\n\n  useEffect(() => {\n    //set loading\n    setState({ ...state, isLoading: true });\n\n    //fetch location data\n    Api.getLocations()\n      .then(response =>\n        //update the container state & disable loading\n        setState({ ...state, isLoading: false, locations: response.data })\n      )\n      .catch(e => {\n        //update the container state & trigger the error notification UI\n        setState({\n          ...state,\n          isLoading: true,\n          locations: null,\n          error: e.message\n        });\n        return toast.error(e.message, { autoClose: false });\n      });\n  }, []);\n\n  /**\n   * Tab change handler\n   * @param event\n   * @param value\n   */\n  const handleTabChange = (event, value) => {\n    setState({ ...state, selectedTab: value });\n  };\n\n  /**\n   * Filters unique locations based on key value\n   * @type {function(Array): Array}\n   */\n  const filterUniqueLocations = key => _.uniqBy(locations, key);\n\n  const showContent = isLoading ? (\n    <Loader isLoading={isLoading} />\n  ) : (\n    <div className=\"container flex flex-col mx-auto px-8 sm:px-16 py-24\">\n      {selectedTab === 0 && (\n        <LocationTable data={filterUniqueLocations(\"name\")} />\n      )}\n      {selectedTab === 1 && (\n        <LocationChart data={filterUniqueLocations(\"name\")} />\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"location-container\">\n      <AppBar position=\"static\">\n        <Tabs value={selectedTab} onChange={handleTabChange} centered>\n          <Tab label=\"Table\" />\n          <Tab label=\"Chart\" />\n        </Tabs>\n      </AppBar>\n      {showContent}\n    </div>\n  );\n};\n\nexport default LocationContainer;\n","import React, { useState } from \"react\";\nimport {\n  FlexibleXYPlot,\n  Hint,\n  HorizontalGridLines,\n  MarkSeries,\n  VerticalGridLines,\n  XAxis,\n  YAxis\n} from \"react-vis\";\nimport { renameProp } from \"../../../utils\";\nimport { Paper } from \"@material-ui/core\";\n\nconst LocationChart = props => {\n  const [state, setState] = useState({ hoverValue: null });\n\n  const { data } = props;\n  const { hoverValue } = state;\n  const hintLabels = { label: \"magnitude\", keyName: \"size\" };\n\n  /**\n   * Resets hint value\n   * @private\n   */\n  const _handleForgetValue = () => {\n    setState({ hoverValue: null });\n  };\n\n  /**\n   * Sets hint value\n   * @param value\n   * @private\n   */\n  const _handleRememberValue = value => {\n    setState({ hoverValue: value });\n  };\n\n  /**\n   * Formats the custom chart hint\n   * @unstable\n   * @param value\n   * @param newValue\n   * @return {*}\n   */\n  function customHintFormat(value, newValue) {\n    return renameProp(newValue.keyName, newValue.label, value);\n  }\n\n  return (\n    <Paper>\n      <div className=\"pb-24 sm:p-16 h-256\">\n        <FlexibleXYPlot>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <MarkSeries\n            onValueMouseOver={_handleRememberValue}\n            onValueMouseOut={_handleForgetValue}\n            data={data}\n          />\n          {hoverValue ? (\n            <Hint value={customHintFormat(hoverValue, hintLabels)} />\n          ) : null}\n        </FlexibleXYPlot>\n      </div>\n    </Paper>\n  );\n};\n\nexport default LocationChart;\n","import React from \"react\";\nimport MUIDataTable from \"mui-datatables\";\n\nconst LocationTable = props => {\n  const { data } = props;\n  const columns = [\n    {\n      name: \"id\",\n      label: \"Id\"\n    },\n    {\n      name: \"name\",\n      label: \"Name\"\n    },\n    {\n      name: \"x\",\n      label: \"X Coord\"\n    },\n    {\n      name: \"y\",\n      label: \"Y Coord\"\n    },\n    {\n      name: \"size\",\n      label: \"Magnitude\"\n    }\n  ];\n  const options = {\n    responsive: \"stacked\"\n  };\n\n  return (\n    <div className=\"pb-24 sm:p-16\">\n      <MUIDataTable data={data} columns={columns} options={options} />\n    </div>\n  );\n};\n\nexport default LocationTable;\n","import React from \"react\";\nimport \"../data\";\nimport \"../assets/styles/index.css\";\nimport { LocationContainer } from \"./components/Location\";\nimport { toast } from \"react-toastify\";\n\ntoast.configure();\n\nconst App = () => {\n  return (\n    <div className=\"main-wrapper\">\n      <main>\n        <LocationContainer />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}